name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Setup Java for Backend
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build Backend with Maven
        working-directory: RentIT-backend
        run: |
          chmod +x mvnw
          ./mvnw clean install -DskipTests=false

      # Setup Node for Frontend
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install & Build Frontend
        working-directory: RentIt-frontend
        run: |
          npm install
          npm run build

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push Backend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/rentit-backend:latest ./RentIT-backend
          docker push ${{ secrets.DOCKER_USERNAME }}/rentit-backend:latest

      - name: Build & Push Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/rentit-frontend:latest ./RentIt-frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/rentit-frontend:latest
